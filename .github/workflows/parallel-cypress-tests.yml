name: Parallel Cypress E2E Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: "18"
  CYPRESS_BASE_URL: http://localhost:3000
  CYPRESS_TODO_API_URL: http://localhost:3001
  CYPRESS_TODO_APP_URL: http://localhost:3000

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        test-suite: [smoke, regression]
        include:
          - test-suite: smoke
            tag: '@Smoke'
            description: 'Smoke Tests'
          - test-suite: regression
            tag: '@Regression'
            description: 'Regression Tests'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            Todo App/frontend/node_modules
            Todo App/backend/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      # Install dependencies
      - name: Install dependencies
        run: npm run install:all
        env:
          NODE_ENV: development

      - name: Install Cypress
        run: npm run cy:verify
        env:
          NODE_ENV: development

      # Start application servers
      - name: Start application servers
        run: npm start &
        env:
          REACT_APP_API_URL: http://localhost:3001
          NODE_ENV: development
          BROWSER: none
          CI: true


      # Run Cypress tests
      - name: Run ${{ matrix.description }}
        uses: cypress-io/github-action@v6
        with:
          working-directory: .
          command: npm run e2e:${{ matrix.test-suite }}:tests:ci
        env:
          CI: true

      # Upload artifacts
      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.description }} Report
          path: Automation Framework/cypress/reports/html

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.description }} Screenshots
          path: Automation Framework/cypress/screenshots

      - name: Upload videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.description }} Videos
          path: Automation Framework/cypress/videos 